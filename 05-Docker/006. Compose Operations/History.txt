
docker compose --version

mkdir composetest
cd composetest
	touch app.py
	vim app.py 
	
		import time

		import redis
		from flask import Flask

		app = Flask(__name__)
		cache = redis.Redis(host='redis', port=6379)


		def get_hit_count():
			retries = 5
			while True:
				try:
					return cache.incr('hits')
				except redis.exceptions.ConnectionError as exc:
					if retries == 0:
						raise exc
					retries -= 1
					time.sleep(0.5)


		@app.route('/')
		def hello():
			count = get_hit_count()
			return 'Hello World! I have been seen {} times.\n'.format(count)
	
echo '
flask
redis
' > requirements.txt

vim Dockerfile
	FROM python:3.7-alpine
	WORKDIR /code
	ENV FLASK_APP app.py
	ENV FLASK_RUN_HOST 0.0.0.0
	RUN apk add --no-cache gcc musl-dev linux-headers
	COPY requirements.txt requirements.txt
	RUN pip install -r requirements.txt
	EXPOSE 5000
	COPY . .
	CMD ["flask", "run"]

vim docker-compose.yml
	version: "3"
	services:
	  web:
		build: .
		ports:
		  - "5000:5000"
	  redis:
		image: "redis:alpine"
		
docker-compose up

docker-compose down