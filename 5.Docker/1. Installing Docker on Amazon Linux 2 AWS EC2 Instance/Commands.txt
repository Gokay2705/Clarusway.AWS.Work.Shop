# Installing Docker on Amazon Linux 2 AWS EC2 Instance

docker ps -a					#tum calisan konteynerlari gormek icin kullaniriz.

docker stop "app name"			# app stop eder.

docker rm "app name" 			# app docker icinden siler.

curl "IP"						# ngnix calisma sayfasini gosterir.

docker inspect "app name"		# burdan IP adresini gorebiliriz.

docker run -d ngnix 			# ngnix app calistitiriz.

docker images					# yuklu app listesini verir.

docker run -d -p 80:80 ngnix	# ilk 80 dis dunya ikinci 80 konteyner, boylece konteyner dis dunyaya acilir.

docker run -d -p 80:80 --name myweb ngnix 				# --name isim vermemizi saglar.

docker exec -it myweb sh		# myweb icine girer.

docker run -d -p 90:80 it -- name myngnix ngnix bash	# benim 80 potumu 90 portunda yayinla.

- sudo amazon-linux-extras install docker **linux ya da ec2'ye docker yükler
- sudo service docker start **docker servisini başlatır
- docker version **yüklenen docker verisyonunu gösterir
- docker run -d nginx **nginx imajını konteynere yüklüyor
- docker ps **açık konteynerlerin durumunu gösteriyor
- docker ps -a **açık/kapalı konteynerleri gösteriyor
- docker run -d -p 80:80 nginx **browserdan ulaşabilmek için imajımızı expose ediyoruz
- docker inspect containet_name **containerımızın tüm detaylarını gösteriyor
- docker stop container adı **containeri stop ediyor
- docker rm container adı ** containeri siliyor (ID'nin tamamı ya da bir iki harfi yeter.hi
- docker pull --name myweb clarusways/cw_web_flask1 **CW'nin oluşturduğu image i indiriyoruz
- docker run -d -p 80:5000 --name myweb clarusways/cw_web_flask1:latest **CW'nin imajını çalıştıyıoruz
- docker exec -it myweb sh ** myweb containerinin için girdik, bu container'dan "exit" komutu ile çıkarız
- docker run -d -p 90:80 -it --name mynginx nginx bash **yeni container açıp direkt içine giriyor

docker stop $(docker ps -aq) 	# hepsini stop et
docker rm -f $(docker ps -aq)	# hepsini siler
docker start mynginx